extends Node

# Level data storage
var levels = {
	"rhythm1": {
		"title": "Catch the Cat",
		"music": "res://assets/audio/song_1.wav", 
		"background_image": "",  # Leave empty for now
		"note_data": "[[2.03600317184448, 3.20933681671143, 4.04133659545898, 4.93733650390625, 7.13466983978272, 7.80666977111816, 9.98267036621094, 11.1880031222534, 14.4840036029053, 15.8386693591309, 16.5106702441406, 17.1613374346924, 17.7693372363281, 19.134670793457, 21.8333364123535, 22.2066693896484, 24.5213361376953, 24.8413358325195, 27.1560025805664, 27.8706708544922, 31.134670793457, 31.8600049609375, 34.4626699084473, 37.7906690234375, 38.4626699084473, 39.134670793457, 42.4093366259766, 45.4706693286133, 46.473335802002, 47.1666684741211, 47.8706708544922, 50.5373349780273, 50.8680043811035, 55.6360021228027, 60.2866712207031, 63.0386701220703, 63.4120069140625, 63.8066678637695, 64.169338762207, 67.1880002612305, 67.8386731738281, 69.0866666430664, 72.4680066699219, 75.1133390063477, 75.7533383959961, 79.0919995898438, 81.4706693286133, 83.5079999560547, 84.169338762207, 85.2146726245117, 85.5560041064453, 88.5213361376953, 89.1613355273438, 97.8120008105469, 104.318668901367, 105.118671953125, 107.06000190918], [-0.54532998855591, 1.66267019454956, 2.83600336257935, 6.15333706085205, 6.8146701449585, 8.52133709136963, 10.516003190918, 12.1586700076294, 13.4920030230713, 15.1560025805664, 18.4413362139893, 19.8173375720215, 21.1400037402344, 21.4920030230713, 22.8573365802002, 23.8173375720215, 24.1693368548584, 25.1613374346924, 26.4840036029053, 28.4893365496826, 30.1640020007324, 30.8360028857422, 33.7906690234375, 34.8360028857422, 37.1613355273438, 40.1373372668457, 41.1613355273438, 43.134670793457, 44.4893384570313, 48.4893384570313, 49.1826711291504, 49.8546681994629, 51.9346700305176, 53.6413350695801, 54.9533353442383, 57.6200032824707, 58.9853368395996, 66.8680005664063, 68.7560010546875, 69.8226667041016, 71.1133390063477, 73.1613355273438, 74.4626737231445, 76.6920056933594, 78.4626737231445, 80.5106702441406, 83.0919995898438, 84.9160047167969, 86.1853376025391, 87.1133390063477, 87.4546704882813, 88.1053357714844, 89.7160001391602, 101.71600013916, 105.822666704102], [5.82266956512451, 6.50533634368897, 8.84133678619385, 10.8680034274292, 11.8173366183472, 12.4573369616699, 13.8333364123535, 16.1586690539551, 18.1106706256104, 18.8040032977295, 19.4866700762939, 20.1586690539551, 20.8200040454102, 22.516003190918, 23.1666703814697, 24.5106702441406, 24.8413358325195, 25.4920030230713, 26.142670213623, 26.7826696032715, 29.2040029162598, 29.8333364123535, 30.5053372973633, 32.4893384570313, 32.8626714343262, 33.1826711291504, 33.4920049304199, 35.1560025805664, 37.4706693286133, 39.8386693591309, 40.4573369616699, 41.7693372363281, 42.7826696032715, 43.4866681689453, 44.1373372668457, 45.1826711291504, 48.5106702441406, 49.1720052355957, 49.8653379077148, 51.1880040759277, 52.990669786377, 54.3133359545898, 56.9373365039063, 58.3346715563965, 59.6360021228027, 61.56667, 66.4840055102539, 68.4146695727539, 69.4386716479492, 70.4840055102539, 72.8200040454102, 73.4600034350586, 74.1106687182617, 74.7613340014648, 76.3400006884766, 77.0866666430664, 77.8226667041016, 79.7640042895508, 80.8306699389648, 81.7906690234375, 84.5213361376953, 85.8653379077148, 86.516003190918, 87.7640042895508, 90.0893369311523, 91.134670793457, 100.22266822998, 102.985333024902, 105.460003435059, 107.433338701172], [0.22266989891052, 7.48667007629395, 8.15867000762939, 9.6200032824707, 13.1720033282471, 16.5106702441406, 17.1613374346924, 17.7906709307861, 20.5106702441406, 23.4866700762939, 25.8546701068115, 29.5133367175293, 31.1560025805664, 31.8813367480469, 35.4653363818359, 36.3400045031738, 38.142670213623, 38.8040052050781, 39.4760022753906, 43.8386693591309, 45.8226705187988, 47.1666684741211, 47.8920026416016, 50.558670579834, 50.8893361682129, 56.3080030078125, 60.990669786377, 64.5213361376953, 65.118671953125, 65.7373395556641, 66.0893369311523, 67.2200055712891, 67.8600049609375, 73.7693372363281, 77.4386716479492, 81.1720014208984, 83.8066678637695, 86.8146710986328, 90.4626737231445, 98.9426694506836, 104.734669267578]]
"
	},
	"rhythm2": {
		"title": "Clean the Cars",
		"music": "res://assets/audio/song_2.wav", 
		"background_image": "",  # Leave empty for now
		"note_data": "[[0.6, 1.2, 1.8],[0.8, 1.4, 2.0],[1.0, 1.6, 2.2],[1.2, 1.8, 2.4]]"
	},
	"rhythm3": {
		"title": "Chase the Robber",
		"music": "res://assets/audio/song_3.wav", 
		"background_image": "", 
		"note_data": "[[0.5, 1.0, 1.5],[0.7, 1.2, 1.7],[0.9, 1.4, 1.9],[1.1, 1.6, 2.1]]"
	},
	"rhythm4": {
		"title": "4",
		"music": "res://assets/audio/song_4.wav", 
		"background_image": "", 
		"note_data": "[[0.5, 1.0, 1.5],[0.7, 1.2, 1.7],[0.9, 1.4, 1.9],[1.1, 1.6, 2.1]]"
	},
	"rhythm5": {
		"title": "5",
		"music": "res://assets/audio/song_5.wav", 
		"background_image": "", 
		"note_data": "[[0.5, 1.0, 1.5],[0.7, 1.2, 1.7],[0.9, 1.4, 1.9],[1.1, 1.6, 2.1]]"
	},
	"rhythm6": {
		"title": "6",
		"music": "res://assets/audio/song_6.wav", 
		"background_image": "", 
		"note_data": "[[0.5, 1.0, 1.5],[0.7, 1.2, 1.7],[0.9, 1.4, 1.9],[1.1, 1.6, 2.1]]"
	},
	"rhythm7": {
		"title": "7",
		"music": "res://assets/audio/song_7.wav", 
		"background_image": "", 
		"note_data": "[[0.5, 1.0, 1.5],[0.7, 1.2, 1.7],[0.9, 1.4, 1.9],[1.1, 1.6, 2.1]]"
	},
	"rhythm8": {
		"title": "8",
		"music": "res://assets/audio/song_8.wav", 
		"background_image": "", 
		"note_data": "[[0.5, 1.0, 1.5],[0.7, 1.2, 1.7],[0.9, 1.4, 1.9],[1.1, 1.6, 2.1]]"
	},
	"rhythm9": {
		"title": "9",
		"music": "res://assets/audio/song_9.wav", 
		"background_image": "", 
		"note_data": "[[0.5, 1.0, 1.5],[0.7, 1.2, 1.7],[0.9, 1.4, 1.9],[1.1, 1.6, 2.1]]"
	}
}

# Currently active level
var current_level = ""
var game_in_progress = false

# Connect to necessary signals
func _ready():
	# Connect to signals
	Signals.StartRhythmGame.connect(start_rhythm_game)
	print("RhythmGameManager ready and signals connected")

# Function to start a rhythm game level
func start_rhythm_game(level_id):
	print("RhythmGameManager received start request for: " + level_id)
	
	if level_id in levels:
		current_level = level_id
		game_in_progress = true
		
		# Get the level editor node
		var level_editor = get_node_or_null("../LevelEditor")
		if level_editor == null:
			print("ERROR: Could not find Level editor node!")
			return
			
		print("Found level editor, loading level data")
		
		# Call the level editor's load method directly
		level_editor.load_rhythm_level(levels[level_id])
	else:
		print("Error: Level " + level_id + " not found!")
